#############################################################################
# Makefile for building: curve_display
# Generated by qmake (2.01a) (Qt 4.8.5) on: ?? 11? 23 13:46:47 2017
# Project:  curve_display.pro
# Template: app
# Command: /opt/qt-for-arm/bin/qmake -spec /opt/qt-for-arm/mkspecs/qws/linux-arm-gnueabi-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile curve_display.pro
#############################################################################

####### Compiler, tools and options

CC            = arm-none-linux-gnueabi-gcc -lts
CXX           = arm-none-linux-gnueabi-g++ -lts
DEFINES       = -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/opt/qt-for-arm/mkspecs/qws/linux-arm-gnueabi-g++ -I. -I/opt/qt-for-arm/include/QtCore -I/opt/qt-for-arm/include/QtNetwork -I/opt/qt-for-arm/include/QtGui -I/opt/qt-for-arm/include -I/opt/qwt-for-arm/qwt-6.1.4-svn/include -I. -I. -I/opt/qt-for-arm/include
LINK          = arm-none-linux-gnueabi-g++ -lts
LFLAGS        = -Wl,-rpath,/home/hl/qt/lib
LIBS          = $(SUBLIBS)  -L/opt/qt-for-arm/lib -L/opt/qwt-for-arm/qwt-6.1.4-svn/lib/ -lqwt -lQtGui -L/home/hl/em9280/rootfs-qt4.7/lib -L/home/hl/qt/lib -lQtNetwork -lQtCore -lpthread 
AR            = arm-none-linux-gnueabi-ar cqs
RANLIB        = 
QMAKE         = /opt/qt-for-arm/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = arm-none-linux-gnueabi-strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		login.cpp \
		about.cpp \
		communication_property.cpp \
		curve_property.cpp \
		serialport.cpp \
		controller.cpp \
		data_collector.cpp \
		process_data_thread.cpp moc_mainwindow.cpp \
		moc_login.cpp \
		moc_about.cpp \
		moc_communication_property.cpp \
		moc_curve_property.cpp \
		moc_controller.cpp \
		moc_data_collector.cpp \
		moc_process_data_thread.cpp
OBJECTS       = main.o \
		mainwindow.o \
		login.o \
		about.o \
		communication_property.o \
		curve_property.o \
		serialport.o \
		controller.o \
		data_collector.o \
		process_data_thread.o \
		moc_mainwindow.o \
		moc_login.o \
		moc_about.o \
		moc_communication_property.o \
		moc_curve_property.o \
		moc_controller.o \
		moc_data_collector.o \
		moc_process_data_thread.o
DIST          = /opt/qt-for-arm/mkspecs/common/unix.conf \
		/opt/qt-for-arm/mkspecs/common/linux.conf \
		/opt/qt-for-arm/mkspecs/common/gcc-base.conf \
		/opt/qt-for-arm/mkspecs/common/gcc-base-unix.conf \
		/opt/qt-for-arm/mkspecs/common/g++-base.conf \
		/opt/qt-for-arm/mkspecs/common/g++-unix.conf \
		/opt/qt-for-arm/mkspecs/common/qws.conf \
		/opt/qt-for-arm/mkspecs/features/exclusive_builds.prf \
		/opt/qt-for-arm/mkspecs/features/default_pre.prf \
		../../../../.qmake.cache \
		/opt/qt-for-arm/mkspecs/qconfig.pri \
		/opt/qt-for-arm/mkspecs/features/qt_functions.prf \
		/opt/qt-for-arm/mkspecs/features/qt_config.prf \
		/opt/qt-for-arm/mkspecs/features/debug.prf \
		/opt/qt-for-arm/mkspecs/features/default_post.prf \
		/opt/qt-for-arm/mkspecs/features/declarative_debug.prf \
		/opt/qt-for-arm/mkspecs/features/shared.prf \
		/opt/qt-for-arm/mkspecs/features/warn_on.prf \
		/opt/qt-for-arm/mkspecs/features/qt.prf \
		/opt/qt-for-arm/mkspecs/features/unix/thread.prf \
		/opt/qt-for-arm/mkspecs/features/moc.prf \
		/opt/qt-for-arm/mkspecs/features/resources.prf \
		/opt/qt-for-arm/mkspecs/features/uic.prf \
		/opt/qt-for-arm/mkspecs/features/yacc.prf \
		/opt/qt-for-arm/mkspecs/features/lex.prf \
		/opt/qt-for-arm/mkspecs/features/include_source_dir.prf \
		curve_display.pro
QMAKE_TARGET  = curve_display
DESTDIR       = 
TARGET        = curve_display

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_login.h ui_curve_property.h ui_about.h ui_communication_property.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: curve_display.pro ../../../../.qmake.cache /opt/qt-for-arm/mkspecs/qws/linux-arm-gnueabi-g++/qmake.conf /opt/qt-for-arm/mkspecs/common/unix.conf \
		/opt/qt-for-arm/mkspecs/common/linux.conf \
		/opt/qt-for-arm/mkspecs/common/gcc-base.conf \
		/opt/qt-for-arm/mkspecs/common/gcc-base-unix.conf \
		/opt/qt-for-arm/mkspecs/common/g++-base.conf \
		/opt/qt-for-arm/mkspecs/common/g++-unix.conf \
		/opt/qt-for-arm/mkspecs/common/qws.conf \
		/opt/qt-for-arm/mkspecs/features/exclusive_builds.prf \
		/opt/qt-for-arm/mkspecs/features/default_pre.prf \
		../../../../.qmake.cache \
		/opt/qt-for-arm/mkspecs/qconfig.pri \
		/opt/qt-for-arm/mkspecs/features/qt_functions.prf \
		/opt/qt-for-arm/mkspecs/features/qt_config.prf \
		/opt/qt-for-arm/mkspecs/features/debug.prf \
		/opt/qt-for-arm/mkspecs/features/default_post.prf \
		/opt/qt-for-arm/mkspecs/features/declarative_debug.prf \
		/opt/qt-for-arm/mkspecs/features/shared.prf \
		/opt/qt-for-arm/mkspecs/features/warn_on.prf \
		/opt/qt-for-arm/mkspecs/features/qt.prf \
		/opt/qt-for-arm/mkspecs/features/unix/thread.prf \
		/opt/qt-for-arm/mkspecs/features/moc.prf \
		/opt/qt-for-arm/mkspecs/features/resources.prf \
		/opt/qt-for-arm/mkspecs/features/uic.prf \
		/opt/qt-for-arm/mkspecs/features/yacc.prf \
		/opt/qt-for-arm/mkspecs/features/lex.prf \
		/opt/qt-for-arm/mkspecs/features/include_source_dir.prf \
		/opt/qt-for-arm/lib/libQtGui.prl \
		/opt/qt-for-arm/lib/libQtNetwork.prl \
		/opt/qt-for-arm/lib/libQtCore.prl
	$(QMAKE) -spec /opt/qt-for-arm/mkspecs/qws/linux-arm-gnueabi-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile curve_display.pro
/opt/qt-for-arm/mkspecs/common/unix.conf:
/opt/qt-for-arm/mkspecs/common/linux.conf:
/opt/qt-for-arm/mkspecs/common/gcc-base.conf:
/opt/qt-for-arm/mkspecs/common/gcc-base-unix.conf:
/opt/qt-for-arm/mkspecs/common/g++-base.conf:
/opt/qt-for-arm/mkspecs/common/g++-unix.conf:
/opt/qt-for-arm/mkspecs/common/qws.conf:
/opt/qt-for-arm/mkspecs/features/exclusive_builds.prf:
/opt/qt-for-arm/mkspecs/features/default_pre.prf:
../../../../.qmake.cache:
/opt/qt-for-arm/mkspecs/qconfig.pri:
/opt/qt-for-arm/mkspecs/features/qt_functions.prf:
/opt/qt-for-arm/mkspecs/features/qt_config.prf:
/opt/qt-for-arm/mkspecs/features/debug.prf:
/opt/qt-for-arm/mkspecs/features/default_post.prf:
/opt/qt-for-arm/mkspecs/features/declarative_debug.prf:
/opt/qt-for-arm/mkspecs/features/shared.prf:
/opt/qt-for-arm/mkspecs/features/warn_on.prf:
/opt/qt-for-arm/mkspecs/features/qt.prf:
/opt/qt-for-arm/mkspecs/features/unix/thread.prf:
/opt/qt-for-arm/mkspecs/features/moc.prf:
/opt/qt-for-arm/mkspecs/features/resources.prf:
/opt/qt-for-arm/mkspecs/features/uic.prf:
/opt/qt-for-arm/mkspecs/features/yacc.prf:
/opt/qt-for-arm/mkspecs/features/lex.prf:
/opt/qt-for-arm/mkspecs/features/include_source_dir.prf:
/opt/qt-for-arm/lib/libQtGui.prl:
/opt/qt-for-arm/lib/libQtNetwork.prl:
/opt/qt-for-arm/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /opt/qt-for-arm/mkspecs/qws/linux-arm-gnueabi-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile curve_display.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/curve_display1.0.0 || $(MKDIR) .tmp/curve_display1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/curve_display1.0.0/ && $(COPY_FILE) --parents mainwindow.h login.h about.h communication_property.h curve_property.h serialport.h controller.h data_collector.h process_data_thread.h .tmp/curve_display1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp login.cpp about.cpp communication_property.cpp curve_property.cpp serialport.cpp controller.cpp data_collector.cpp process_data_thread.cpp .tmp/curve_display1.0.0/ && $(COPY_FILE) --parents mainwindow.ui login.ui curve_property.ui about.ui communication_property.ui .tmp/curve_display1.0.0/ && (cd `dirname .tmp/curve_display1.0.0` && $(TAR) curve_display1.0.0.tar curve_display1.0.0 && $(COMPRESS) curve_display1.0.0.tar) && $(MOVE) `dirname .tmp/curve_display1.0.0`/curve_display1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/curve_display1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_login.cpp moc_about.cpp moc_communication_property.cpp moc_curve_property.cpp moc_controller.cpp moc_data_collector.cpp moc_process_data_thread.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_login.cpp moc_about.cpp moc_communication_property.cpp moc_curve_property.cpp moc_controller.cpp moc_data_collector.cpp moc_process_data_thread.cpp
moc_mainwindow.cpp: curve_property.h \
		communicationproperty.h \
		about.h \
		mainwindow.h
	/opt/qt-for-arm/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_login.cpp: login.h
	/opt/qt-for-arm/bin/moc $(DEFINES) $(INCPATH) login.h -o moc_login.cpp

moc_about.cpp: about.h
	/opt/qt-for-arm/bin/moc $(DEFINES) $(INCPATH) about.h -o moc_about.cpp

moc_communication_property.cpp: communication_property.h
	/opt/qt-for-arm/bin/moc $(DEFINES) $(INCPATH) communication_property.h -o moc_communication_property.cpp

moc_curve_property.cpp: curve_property.h
	/opt/qt-for-arm/bin/moc $(DEFINES) $(INCPATH) curve_property.h -o moc_curve_property.cpp

moc_controller.cpp: login.h \
		mainwindow.h \
		curve_property.h \
		communicationproperty.h \
		about.h \
		process_data_thread.h \
		data_collector.h \
		serialport.h \
		controller.h
	/opt/qt-for-arm/bin/moc $(DEFINES) $(INCPATH) controller.h -o moc_controller.cpp

moc_data_collector.cpp: serialport.h \
		data_collector.h
	/opt/qt-for-arm/bin/moc $(DEFINES) $(INCPATH) data_collector.h -o moc_data_collector.cpp

moc_process_data_thread.cpp: data_collector.h \
		serialport.h \
		process_data_thread.h
	/opt/qt-for-arm/bin/moc $(DEFINES) $(INCPATH) process_data_thread.h -o moc_process_data_thread.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_login.h ui_curve_property.h ui_about.h ui_communication_property.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_login.h ui_curve_property.h ui_about.h ui_communication_property.h
ui_mainwindow.h: mainwindow.ui
	/opt/qt-for-arm/bin/uic mainwindow.ui -o ui_mainwindow.h

ui_login.h: login.ui
	/opt/qt-for-arm/bin/uic login.ui -o ui_login.h

ui_curve_property.h: curve_property.ui
	/opt/qt-for-arm/bin/uic curve_property.ui -o ui_curve_property.h

ui_about.h: about.ui
	/opt/qt-for-arm/bin/uic about.ui -o ui_about.h

ui_communication_property.h: communication_property.ui
	/opt/qt-for-arm/bin/uic communication_property.ui -o ui_communication_property.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp controller.h \
		login.h \
		mainwindow.h \
		curve_property.h \
		communicationproperty.h \
		about.h \
		process_data_thread.h \
		data_collector.h \
		serialport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		curve_property.h \
		communicationproperty.h \
		about.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

login.o: login.cpp login.h \
		ui_login.h \
		mainwindow.h \
		curve_property.h \
		communicationproperty.h \
		about.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o login.o login.cpp

about.o: about.cpp about.h \
		ui_about.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o about.o about.cpp

communication_property.o: communication_property.cpp communication_property.h \
		ui_communication_property.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o communication_property.o communication_property.cpp

curve_property.o: curve_property.cpp curve_property.h \
		ui_curve_property.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o curve_property.o curve_property.cpp

serialport.o: serialport.cpp serialport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serialport.o serialport.cpp

controller.o: controller.cpp controller.h \
		login.h \
		mainwindow.h \
		curve_property.h \
		communicationproperty.h \
		about.h \
		process_data_thread.h \
		data_collector.h \
		serialport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o controller.o controller.cpp

data_collector.o: data_collector.cpp data_collector.h \
		serialport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o data_collector.o data_collector.cpp

process_data_thread.o: process_data_thread.cpp process_data_thread.h \
		data_collector.h \
		serialport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o process_data_thread.o process_data_thread.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_login.o: moc_login.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_login.o moc_login.cpp

moc_about.o: moc_about.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_about.o moc_about.cpp

moc_communication_property.o: moc_communication_property.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_communication_property.o moc_communication_property.cpp

moc_curve_property.o: moc_curve_property.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_curve_property.o moc_curve_property.cpp

moc_controller.o: moc_controller.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_controller.o moc_controller.cpp

moc_data_collector.o: moc_data_collector.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_data_collector.o moc_data_collector.cpp

moc_process_data_thread.o: moc_process_data_thread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_process_data_thread.o moc_process_data_thread.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

